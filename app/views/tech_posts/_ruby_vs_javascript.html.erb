<section>
  <p><img src="http://i.ytimg.com/vi/s_9dDX3Yjtk/mqdefault.jpg"/></p>
  <p>We've reached our seventh week in our crazy adventure. As of now we have learned a great deal about the command line and ruby.We are just diving into the workings of the language of the web, JavaScript. This blog serves to outline the differences between ruby and JS. Since there are many, we will only be focusing on differences in their documentation. So, let's begin!</p>
  <p>The main difference between ruby and JS is that ruby tends to be a lot smarter of a language than JS. That is to say, ruby requires less guidance and direction than JS does. The syntax that comes along with JS (i.e. brackets, loops, variables, etc) require a much larger deal of intricacy than ruby does. For example, to start and end a method in ruby, all you need is to define the method and end it with the key word "end". To start and end a function in JS, you would need to have an open bracket and close bracket. This does not only apply to functions but to variable instantiation as well. Everything that begins in JS must end in JS with open and close brackets, respectively. Below are examples of functions and methods. Figure 1 shows us how methods are made in Ruby, and Figure 2 shows us how functions are made in JS.</p>
  <figure>
    <img src ="http://karanaditya993.github.io/imgs/methods-ruby.png">
    <figcaption>Figure 1: Methods in Ruby</figcaption>
  </figure>
  <figure>
    <img src ="http://karanaditya993.github.io/imgs/functions-JS.png">
    <figcaption>Figure 2: Functions in JS</figcaption>
  </figure>
  <p>Another difference, which can be seen in both figures, is how certain things are printed to the screen. In ruby, "puts" is the code that allows something to be printed to the screen. In JS, "console.log" is synonomous with ruby's "puts".</p>
  <p>Although there are many differences between these two coding languages, their outcome is the same. Both languages serve as a means of instructing the computer to perform. They have different ways of doing it, but at the end of the day, they are just a part of a much bigger picture.</p>
</section>